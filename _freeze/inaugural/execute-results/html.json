{
  "hash": "c123e4ba87f0df50898fbfe66ecb3f2e",
  "result": {
    "markdown": "---\ntitle: \"chatGPT\"\nsubtitle: \"대통령 취임사\"\nauthor:\n  - name: 이광춘\n    url: https://www.linkedin.com/in/kwangchunlee/\n    affiliation: 한국 R 사용자회\n    affiliation-url: https://github.com/bit2r\ntitle-block-banner: true\n#title-block-banner: \"#562457\"\nformat:\n  html:\n    css: css/quarto.css\n    theme: flatly\n    code-fold: true\n    code-overflow: wrap\n    toc: true\n    toc-depth: 3\n    toc-title: 목차\n    number-sections: true\n    highlight-style: github    \n    self-contained: false\nfilters:\n   - lightbox\n   - custom-callout.lua   \nlightbox: auto\nlink-citations: true\nknitr:\n  opts_chunk: \n    message: false\n    warning: false\n    collapse: true\n    comment: \"#>\" \n    R.options:\n      knitr.graphics.auto_pdf: true\neditor_options: \n  chunk_output_type: console\n---\n\n\n\n# 국문 취임사\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n\npresidents <- fs::dir_ls(\"data/Inaugural/\")\n\ninaugural_tbl <- presidents %>% \n  enframe(name = \"파일경로\") %>% \n  separate(value, into = c(\"역대\", \"대통령\"), sep=\"_\") %>% \n  mutate(대통령 = str_remove(대통령, \"\\\\.txt\")) %>% \n  mutate(취임사 = map(파일경로, read_lines)) %>% \n  mutate(취임사 = map_chr(취임사, paste0, collapse = \" \")) %>% \n  select(역대, 대통령, 취임사) %>% \n  mutate(취임사 = str_squish(취임사)) %>% \n  mutate(취임사 = str_replace_all(취임사, \"ㆍ\", \", \"))\n\ninaugural_tbl\n#> # A tibble: 13 × 3\n#>    역대                  대통령 취임사                                          \n#>    <chr>                 <chr>  <chr>                                           \n#>  1 data/Inaugural/제03대 이승만 나의 사랑하는 동포 여러분. 내가 오늘 또 한번 우…\n#>  2 data/Inaugural/제04대 윤보선 제2공화국의 초대대통령으로 영예의 당선을 얻은 … \n#>  3 data/Inaugural/제09대 박정희 친애하는 5천만 동포 여러분! 그리고 내외 귀빈 여…\n#>  4 data/Inaugural/제10대 최규하 친애하는 국내외 동포 여러분! 그리고 이 자리를 … \n#>  5 data/Inaugural/제12대 전두환 친애하는 국내외 동포 여러분! 그리고 이 자리를 … \n#>  6 data/Inaugural/제13대 노태우 친애하는 6천만 국내외 동포 여러분. 우리 헌정발… \n#>  7 data/Inaugural/제14대 김영삼 친애하는 7천만 국내외 동포 여러분, 노태우 대통… \n#>  8 data/Inaugural/제15대 김대중 존경하고 사랑하는 국민 여러분! 오늘 저는 대한민…\n#>  9 data/Inaugural/제16대 노무현 존경하는 국민 여러분. 오늘 저는 대한민국의 제16…\n#> 10 data/Inaugural/제17대 이명박 존경하는 국민 여러분! 700만 해외동포 여러분! 이…\n#> 11 data/Inaugural/제18대 박근혜 희망의 새 시대를 열겠습니다. 존경하는 국민여러… \n#> 12 data/Inaugural/제19대 문재인 존경하고 사랑하는 국민 여러분! 감사합니다. 국민…\n#> 13 data/Inaugural/제20대 윤석열 존경하고 사랑하는 국민 여러분, 750만 재외동포 …\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(httr)\n\nget_embedding <- function(inaugural_address) {\n  embeddings_url <- \"https://api.openai.com/v1/embeddings\"\n  auth <- add_headers(Authorization = paste(\"Bearer\", Sys.getenv(\"OPENAI_API_KEY\")))\n  body <- list(model = \"text-embedding-ada-002\", input = inaugural_address)\n  \n  resp <- POST(\n    embeddings_url,\n    auth,\n    body = body,\n    encode = \"json\"\n  )\n  \n  embeddings <- content(resp, as = \"text\", encoding = \"UTF-8\") %>%\n    jsonlite::fromJSON(flatten = TRUE) %>%\n    pluck(\"data\", \"embedding\")\n  \n  Sys.sleep(1)\n  \n  return(embeddings)\n}\n\nembedding_tbl <- inaugural_tbl %>% \n  mutate(임베딩 = map(취임사, get_embedding))\n\nembedding_tbl %>% \n  write_rds(\"data/Inaugural.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(ggrepel)\nextrafont::loadfonts()\n\nembedding_tbl <-\n  read_rds(\"data/Inaugural.rds\") %>% \n  filter(!대통령 %in% c(\"이명박\", \"윤보선\"))\n\nembeddings_mat <- matrix(\n  unlist(embedding_tbl$임베딩), \n  ncol = 1536, byrow = TRUE\n)\n\ndim(embeddings_mat)\n#> [1]   11 1536\n\nembeddings_similarity <- embeddings_mat / sqrt(rowSums(embeddings_mat * embeddings_mat))\nembeddings_similarity <- embeddings_similarity %*% t(embeddings_similarity)\ndim(embeddings_similarity)\n#> [1] 11 11\n\nenframe(embeddings_similarity[11,], name = \"연설문\", value = \"유사도\") %>%\n  arrange(-유사도)\n#> # A tibble: 11 × 2\n#>    연설문 유사도\n#>     <int>  <dbl>\n#>  1     11  1.00 \n#>  2      8  0.945\n#>  3      5  0.940\n#>  4      3  0.939\n#>  5      4  0.939\n#>  6      7  0.939\n#>  7      6  0.939\n#>  8     10  0.936\n#>  9      9  0.933\n#> 10      1  0.927\n#> 11      2  0.900\n\nset.seed(234)\ninaugural_pca <- irlba::prcomp_irlba(embeddings_mat, n = 3)\n\ninaugural_pca <- \n  as_tibble(inaugural_pca$x) %>%\n  bind_cols(embedding_tbl)\n\ninaugural_pca %>%\n  ggplot(aes(PC1, PC2)) +\n    geom_point(size = 1.3, alpha = 0.8) +\n    geom_text_repel(aes(label=대통령)) +\n    theme_bw(base_family=\"NanumGothic\")\n```\n\n::: {.cell-output-display}\n![](inaugural_files/figure-html/unnamed-chunk-3-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\nsummary(inaugural_pca)\n#>       PC1                PC2                 PC3               역대          \n#>  Min.   :-0.17672   Min.   :-0.203323   Min.   :-0.11271   Length:11         \n#>  1st Qu.:-0.08985   1st Qu.:-0.004027   1st Qu.:-0.06784   Class :character  \n#>  Median : 0.03278   Median : 0.019304   Median :-0.01379   Mode  :character  \n#>  Mean   : 0.00000   Mean   : 0.000000   Mean   : 0.00000                     \n#>  3rd Qu.: 0.06600   3rd Qu.: 0.059489   3rd Qu.: 0.05919                     \n#>  Max.   : 0.23725   Max.   : 0.105361   Max.   : 0.13289                     \n#>                                                                              \n#>                                                                              \n#>                                                                              \n#>                                                                              \n#>                                                                              \n#>     대통령             취임사          임베딩.Length  임베딩.Class  임베딩.Mode\n#>  Length:11          Length:11          1       -none-  list                    \n#>  Class :character   Class :character   1       -none-  list                    \n#>  Mode  :character   Mode  :character   1       -none-  list                    \n#>                                        1       -none-  list                    \n#>                                        1       -none-  list                    \n#>                                        1       -none-  list                    \n#>                                        1       -none-  list                    \n#>                                        1       -none-  list                    \n#>                                        1       -none-  list                    \n#>                                        1       -none-  list                    \n#>                                        1       -none-  list\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(umap)\npresident_umap <- umap(embeddings_mat, n_neighbors = 3)\n\numap_df <- president_umap$layout %>%\n  as.data.frame()%>%\n  rename(UMAP1=\"V1\",\n         UMAP2=\"V2\") %>% \n  bind_cols(embedding_tbl)\n\numap_df %>% names()\n#> [1] \"UMAP1\"  \"UMAP2\"  \"역대\"   \"대통령\" \"취임사\" \"임베딩\"\n\numap_df %>%\n  ggplot(aes(x = UMAP1, \n             y = UMAP2))+\n    geom_point(size = 1.3, alpha = 0.8) +\n    geom_text_repel(aes(label=대통령)) +\n    theme_bw(base_family=\"NanumGothic\")\n```\n\n::: {.cell-output-display}\n![](inaugural_files/figure-html/unnamed-chunk-4-1.png){width=672}\n:::\n:::\n\n\n\n# 영문 번역 취임사\n\n## 파파고\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n\ntranslate_papago <- function(text, source=\"ko\", target=\"en\") {\n\n  transURL <- \"https://openapi.naver.com/v1/papago/n2mt\"\n\n  response <- transURL %>%\n    httr::POST(\n      httr::add_headers(\n        \"Content-Type\"          = \"application/x-www-form-urlencoded; charset=UTF-8\",\n        \"X-Naver-Client-Id\"     = Sys.getenv('NAVER_CLIENT_ID'),\n        \"X-Naver-Client-Secret\" = Sys.getenv('NAVER_CLIENT_SECRET')\n      ),\n      body = glue::glue(\"text={text}&source={source}&target={target}\")\n    ) %>%\n    toString() %>%\n    jsonlite::fromJSON()\n  \n  Sys.sleep(1)\n\n  response$message$result$translatedText\n}\n\ntranlated <- fs::dir_ls(\"data/Inaugural-eng/\")\n\ntranslated_tbl <- tranlated %>% \n  enframe(name = \"파일경로\") %>% \n  separate(value, into = c(\"역대\", \"대통령\"), sep=\"_\") %>% \n  mutate(대통령 = str_remove(대통령, \"\\\\.txt\")) %>% \n  mutate(영문번역 = map(파일경로, read_lines)) %>% \n  mutate(영문번역 = map_chr(영문번역, paste0, collapse = \" \")) %>% \n  select(역대, 대통령, 영문번역) %>% \n  mutate(영문번역 = str_squish(영문번역)) %>% \n  mutate(영문번역 = str_replace_all(영문번역, \"ㆍ\", \", \"))\n\n\ntranslated_tbl\n#> # A tibble: 13 × 3\n#>    역대                      대통령 영문번역                                    \n#>    <chr>                     <chr>  <chr>                                       \n#>  1 data/Inaugural-eng/제03대 이승만 \"My fellow countrymen and women. Today I st…\n#>  2 data/Inaugural-eng/제04대 윤보선 \"My excitement yesterday at being honored a…\n#>  3 data/Inaugural-eng/제09대 박정희 \"Dear 50 million compatriots! And distingui…\n#>  4 data/Inaugural-eng/제10대 최규하 \"Dear compatriots at home and abroad! And d…\n#>  5 data/Inaugural-eng/제12대 전두환 \"Dear compatriots at home and abroad! And d…\n#>  6 data/Inaugural-eng/제13대 노태우 \"Dear 60 million compatriots at home and ab…\n#>  7 data/Inaugural-eng/제14대 김영삼 \"Dear 70 million compatriots at home and ab…\n#>  8 data/Inaugural-eng/제15대 김대중 \"Honored and beloved citizens of the Republ…\n#>  9 data/Inaugural-eng/제16대 노무현 \"Honorable fellow citizens. Today I stand h…\n#> 10 data/Inaugural-eng/제17대 이명박 \"Honored citizens! 7 million overseas Korea…\n#> 11 data/Inaugural-eng/제18대 박근혜 \"We will usher in a new era of hope. Honora…\n#> 12 data/Inaugural-eng/제19대 문재인 \"My honored and beloved people! Thank you. …\n#> 13 data/Inaugural-eng/제20대 윤석열 \"My honored and beloved countrymen, our 7.5…\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntranslated_embedding <- translated_tbl %>% \n  mutate(임베딩 = map(영문번역, get_embedding))\n\ntranslated_embedding %>% \n  write_rds(\"data/translated_embedding.rds\")\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ntranslated_embedding <- \n  read_rds(\"data/translated_embedding.rds\")\n\ntranslated_mat <- matrix(\n  unlist(translated_embedding$임베딩), \n  ncol = 1536, byrow = TRUE\n)\n\ndim(translated_mat)\n#> [1]   13 1536\n\ntranslated_similarity <- translated_mat / sqrt(rowSums(translated_mat * translated_mat))\ntranslated_similarity <- translated_similarity %*% t(translated_similarity)\ndim(translated_similarity)\n#> [1] 13 13\n\nenframe(translated_similarity[13,], name = \"연설문\", value = \"유사도\") %>%\n  arrange(-유사도)\n#> # A tibble: 13 × 2\n#>    연설문 유사도\n#>     <int>  <dbl>\n#>  1     13  1.00 \n#>  2     10  0.924\n#>  3      7  0.922\n#>  4      1  0.922\n#>  5      6  0.920\n#>  6      8  0.918\n#>  7      4  0.914\n#>  8      5  0.914\n#>  9      9  0.914\n#> 10     11  0.908\n#> 11      2  0.905\n#> 12     12  0.899\n#> 13      3  0.894\n\nset.seed(777)\ntranslated_pca <- irlba::prcomp_irlba(translated_mat, n = 3)\n\ntranslated_pca_tbl <- \n  as_tibble(translated_pca$x) %>%\n  bind_cols(translated_embedding)\n\ntranslated_pca_tbl %>%\n  ggplot(aes(PC1, PC2)) +\n    geom_point(size = 1.3, alpha = 0.8) +\n    geom_text_repel(aes(label=대통령)) +\n    theme_bw(base_family=\"NanumGothic\")\n```\n\n::: {.cell-output-display}\n![](inaugural_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n\n```{.r .cell-code}\n\nsummary(translated_pca)\n#> Importance of components:\n#>                           PC1    PC2     PC3\n#> Standard deviation     0.1087 0.1033 0.09497\n#> Proportion of Variance 0.1719 0.1551 0.13111\n#> Cumulative Proportion  0.1719 0.3269 0.45805\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(umap)\ntranslated_umap <- umap(translated_mat, n_neighbors = 3)\n\ntranslated_viz <- translated_umap$layout %>%\n  as.data.frame()%>%\n  rename(UMAP1=\"V1\",\n         UMAP2=\"V2\") %>% \n  bind_cols(translated_embedding)\n\numap_df %>% names()\n#> [1] \"UMAP1\"  \"UMAP2\"  \"역대\"   \"대통령\" \"취임사\" \"임베딩\"\n\ntranslated_viz %>%\n  ggplot(aes(x = UMAP1, \n             y = UMAP2))+\n    geom_point(size = 1.3, alpha = 0.8) +\n    geom_text_repel(aes(label=대통령)) +\n    theme_bw(base_family=\"NanumGothic\")\n```\n\n::: {.cell-output-display}\n![](inaugural_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n",
    "supporting": [
      "inaugural_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}