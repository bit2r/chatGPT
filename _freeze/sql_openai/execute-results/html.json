{
  "hash": "0264ee55202baee25d19bd1cacc41e26",
  "result": {
    "markdown": "---\ntitle: \"chatGPT\"\nsubtitle: \"챗GPT SQL\"\ndescription: | \n  챗GPT SQL\nauthor:\n  - name: 이광춘\n    url: https://www.linkedin.com/in/kwangchunlee/\n    affiliation: 한국 R 사용자회\n    affiliation-url: https://github.com/bit2r\ntitle-block-banner: true\n#title-block-banner: \"#562457\"\nformat:\n  html:\n    css: css/quarto.css\n    theme: flatly\n    code-fold: true\n    code-tools: true\n    code-link: true\n    code-overflow: wrap\n    toc: true\n    toc-depth: 3\n    toc-title: 목차\n    number-sections: true\n    highlight-style: github    \n    self-contained: false\nfilters:\n   - lightbox\n\nlightbox: auto\nlink-citations: true\nknitr:\n  opts_chunk: \n    message: false\n    warning: false\n    collapse: true\n    comment: \"#>\" \n    R.options:\n      knitr.graphics.auto_pdf: true\neditor_options: \n  chunk_output_type: console\nnotebook-view:\n  - notebook: jupyterlab/sql.ipynb\n    title: \"SQL 쥬피터 노트북\"\n---\n\n\n![](images/sql_workflow.jpg)\n\n# 자연어 &rarr; SQL\n\n`code-davinci-002`이 사용중단(deprecated)되어 `text-davinci-002`, `text-davinci-003` 모델들이 Codex 기반으로 프로그램 작성이 가능하다. [@plaetsen_2023]\n\n:::{.column-body-outset}\n\n:::::{.columns}\n:::{.column}\n### 영어 프롬프트 {.unnumbered}\n\n<!-- 12A0366C:jupyterlab/sql.ipynb#sql-helloworld |  | echo:true,warning:false,asis:true,eval:false -->\n:::\n\n:::{.column}\n### 한글 프롬프트 {.unnumbered}\n\n<!-- 12A0366C:jupyterlab/sql.ipynb#sql-helloworld-ko |  | echo:true,warning:false,asis:true,eval:false -->\n:::\n:::::\n\n:::\n\n## 함수\n\n`generate_sql_query()` 함수를 작성하여 국,영문 프롬프트를 작성하여 바로 SQL \n쿼리를 작성하는 것도 가능하다.\n\n<!-- 12A0366C:jupyterlab/sql.ipynb#sql-function |  | echo:true,warning:false,asis:true,eval:false -->\n\n# Langchain + SQL\n\n국영문 프롬프트를 주어 자연어를 SQL 쿼리문을 작성하는 것에서 한걸음 더 들어가 \n데이터베이스에서 SQL 쿼리문을 실행하여 결과값을 얻는 것도 가능하다.\n소프트웨어 카펜트리 SQL 교과정에서 사용하는 `survey.db`를 대상으로 \n테이블이 존재하는지 존재한다면 몇개인지 테이블 명은 무엇인지 파악할 수 있다.\n\n[[Databases and SQL](https://swcarpentry.github.io/sql-novice-survey/)]{.aside}\n\n\n<!-- 12A0366C:jupyterlab/sql.ipynb#sql-survey |  | echo:true,warning:false,asis:true,eval:false -->\n\n\n## 정렬과 중복제거\n\n[Sorting and Removing Duplicates](https://swcarpentry.github.io/sql-novice-survey/02-sort-dup/index.html)에 언급된 \"Person 테이블에 있는 과학자의 전체 이름을 성을 기준으로 정렬하여 표시하는 쿼리를 작성합니다.\" 라는 퀴즈문제를 풀어보자.\n\n:::{.column-body-outset}\n\n:::::{.columns}\n:::{.column}\n### SWC 코드 {.unnumbered}\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(DBI)\nsurvey_db <- dbConnect(RSQLite::SQLite(), \"jupyterlab/survey.db\")\ndbGetQuery(survey_db, \"SELECT personal, family FROM Person ORDER BY family ASC;\")\n#>    personal   family\n#> 1     Frank Danforth\n#> 2   William     Dyer\n#> 3  Anderson     Lake\n#> 4     Frank  Pabodie\n#> 5 Valentina  Roerich\n```\n:::\n\n\n:::\n\n:::{.column}\n### 챗GPT 코드 {.unnumbered}\n\n<!-- 12A0366C:jupyterlab/sql.ipynb#sql-sort |  | echo:true,warning:false,asis:true,eval:false -->\n:::\n:::::\n\n:::\n\n\n## 총계\n\n[Calculating New Values](https://swcarpentry.github.io/sql-novice-survey/04-calc/index.html)에 언급된 \"자세히 읽어본 결과, 발렌티나 로리히가 염도를 백분율로 보고하고 있다는 것을 알 수 있습니다. 설문 조사 테이블에서 그녀의 모든 염도 측정값을 100으로 나눈 값을 반환하는 쿼리를 작성합니다.(After further reading, we realize that Valentina Roerich was reporting salinity as percentages. Write a query that returns all of her salinity measurements from the Survey table with the values divided by 100.)\" 라는 퀴즈문제를 풀어보자.\n\n:::{.column-body-outset}\n\n:::::{.columns}\n:::{.column}\n### SWC 코드 {.unnumbered}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbGetQuery(survey_db, \"SELECT taken, reading / 100 FROM Survey WHERE person = 'roe' AND quant = 'sal';\")\n#>   taken reading / 100\n#> 1   752         0.416\n#> 2   837         0.225\n```\n:::\n\n\n:::\n\n:::{.column}\n### 챗GPT 코드 {.unnumbered}\n\n<!-- 12A0366C:jupyterlab/sql.ipynb#sql-new-value |  | echo:true,warning:false,asis:true,eval:false -->\n:::\n:::::\n\n:::\n\n## 챗GPT 모델\n\n앞선 완성(Completion) 모형 대신 챗GPT 모형을 사용하여 고급 SQL문을 작성할 수 있다.\n데이터베이스의 데이터베이스 스키마 정보를 확보하자.\n\n<!-- 12A0366C:jupyterlab/sql.ipynb#sql-db-info |  | echo:true,warning:false,asis:true,eval:false -->\n\n[프롬프트 참조: [TalkToSQL](https://github.com/woniesong92/talktosql)]{.aside}\n\n[Combining Data](https://swcarpentry.github.io/sql-novice-survey/07-join/index.html)에 나오는 사례를 제대로 SQL 쿼리문을 작성하기 위해서는 `system_prompt`에 역할 부여는 물론 Few-Shot learning을 위한 사례도 전달하고 `user_prompt` 프롬프트 작성에 데이터베이스 테이블 정보도 넘겨줘야 원하는 쿼리문을 작성할 가능이 높아진다.\n\n<!-- 12A0366C:jupyterlab/sql.ipynb#sql-chatGPT |  | echo:true,warning:false,asis:true,eval:false -->\n\n:::{.column-body-outset}\n\n:::::{.columns}\n:::{.column}\n### SWC 코드 {.unnumbered}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbGetQuery(survey_db, \"SELECT\n   Survey.reading\nFROM\n   Site\n   JOIN\n      Visited\n  JOIN\n      Survey\n      ON Site.name = Visited.site\n      AND Visited.id = Survey.taken\nWHERE\n   Site.name = 'DR-1'\n   AND Survey.quant = 'rad';\")\n#>   reading\n#> 1    9.82\n#> 2    7.80\n#> 3   11.25\n```\n:::\n\n\n:::\n\n:::{.column}\n### 챗GPT 코드 {.unnumbered}\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndbGetQuery(survey_db, \"SELECT s.reading\n           FROM Visited v\n           JOIN Survey s ON v.id = s.taken AND v.site = 'DR-1'\n           WHERE s.quant = 'rad';\")\n#>   reading\n#> 1    9.82\n#> 2    7.80\n#> 3   11.25\n```\n:::\n\n\n:::\n:::::\n\n:::\n\n# 관련정보\n\n- [SQLite Sakila Sample Database](https://www.kaggle.com/datasets/atanaskanev/sqlite-sakila-sample-database)\n- [`postgreSQL` - DVD 대여 데이터베이스](https://statkclee.github.io/data-science/ds-postgreSQL.html)\n- [DVD 대여 데이터베이스에서 인사이트 도출](https://statkclee.github.io/data-science/ds-postgreSQL-insight.html)\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}