{
  "hash": "04e5b057c7fe4fb07316a2c34e851b4d",
  "result": {
    "markdown": "---\noutput: html_document\neditor_options: \n  chunk_output_type: console\n---\n\n\n## Getting Started\n### Prerequisites\n\nInstall packages library <b> palmerpenguins </b> and <b>tidymodels</b> \n\n\n::: {.cell}\n\n```{.r .cell-code}\ninstall.packages('palmerpenguins')\ninstall.packages('tidymodels')\n```\n:::\n\n\n### Load package libraries\nLoad libraries\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'dplyr'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:stats':\n\n    filter, lag\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:base':\n\n    intersect, setdiff, setequal, union\n```\n:::\n\n```{.r .cell-code}\nlibrary(palmerpenguins)\nlibrary(data.table)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n\nAttaching package: 'data.table'\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\nThe following objects are masked from 'package:dplyr':\n\n    between, first, last\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggplot2)\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages\n───────────────────────────────────────\ntidyverse 1.3.2 ──\n```\n:::\n\n::: {.cell-output .cell-output-stderr}\n```\n✔ tibble  3.1.8     ✔ purrr   0.3.5\n✔ tidyr   1.2.1     ✔ stringr 1.5.0\n✔ readr   2.1.3     ✔ forcats 0.5.2\n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ data.table::between() masks dplyr::between()\n✖ dplyr::filter()       masks stats::filter()\n✖ data.table::first()   masks dplyr::first()\n✖ dplyr::lag()          masks stats::lag()\n✖ data.table::last()    masks dplyr::last()\n✖ purrr::transpose()    masks data.table::transpose()\n```\n:::\n\n```{.r .cell-code}\nlibrary(tidymodels)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\n── Attaching packages ────────────────────────────────────── tidymodels 1.0.0 ──\n✔ broom        1.0.1     ✔ rsample      1.1.1\n✔ dials        1.1.0     ✔ tune         1.0.1\n✔ infer        1.0.4     ✔ workflows    1.1.2\n✔ modeldata    1.0.1     ✔ workflowsets 1.0.0\n✔ parsnip      1.0.3     ✔ yardstick    1.1.0\n✔ recipes      1.0.3     \n── Conflicts ───────────────────────────────────────── tidymodels_conflicts() ──\n✖ data.table::between() masks dplyr::between()\n✖ scales::discard()     masks purrr::discard()\n✖ dplyr::filter()       masks stats::filter()\n✖ data.table::first()   masks dplyr::first()\n✖ recipes::fixed()      masks stringr::fixed()\n✖ dplyr::lag()          masks stats::lag()\n✖ data.table::last()    masks dplyr::last()\n✖ yardstick::spec()     masks readr::spec()\n✖ recipes::step()       masks stats::step()\n✖ purrr::transpose()    masks data.table::transpose()\n• Search for functions across packages at https://www.tidymodels.org/find/\n```\n:::\n\n```{.r .cell-code}\nlibrary(ggfortify)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nRegistered S3 method overwritten by 'ggfortify':\n  method          from   \n  autoplot.glmnet parsnip\n```\n:::\n\n```{.r .cell-code}\nlibrary(recipes)\nlibrary(rsample)\nlibrary(yardstick)\nlibrary(caret)\n```\n\n::: {.cell-output .cell-output-stderr}\n```\nLoading required package: lattice\n\nAttaching package: 'caret'\n\nThe following objects are masked from 'package:yardstick':\n\n    precision, recall, sensitivity, specificity\n\nThe following object is masked from 'package:purrr':\n\n    lift\n```\n:::\n\n```{.r .cell-code}\nlibrary(profvis)\nlibrary(purrr)\n```\n:::\n\n## Load data\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins <- penguins %>% \n  mutate_if(is.character, as.factor) %>% \n  drop_na()\n```\n:::\n\n\n## EDA\nThe <b>penguins</b> dataset includes measurements of flow characteristics of the components. Only pterosaur data are considered in this project\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\nRows: 333\nColumns: 7\n$ species           <fct> Adelie, Adelie, Adelie, Adelie, Adelie, Adelie, Adel…\n$ island            <fct> Torgersen, Torgersen, Torgersen, Torgersen, Torgerse…\n$ bill_length_mm    <dbl> 39.1, 39.5, 40.3, 36.7, 39.3, 38.9, 39.2, 41.1, 38.6…\n$ bill_depth_mm     <dbl> 18.7, 17.4, 18.0, 19.3, 20.6, 17.8, 19.6, 17.6, 21.2…\n$ flipper_length_mm <int> 181, 186, 195, 193, 190, 181, 195, 182, 191, 198, 18…\n$ body_mass_g       <int> 3750, 3800, 3250, 3450, 3650, 3625, 4675, 3200, 3800…\n$ sex               <fct> male, female, female, female, male, female, male, fe…\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsummary(penguins)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n      species          island    bill_length_mm  bill_depth_mm  \n Adelie   :146   Biscoe   :163   Min.   :32.10   Min.   :13.10  \n Chinstrap: 68   Dream    :123   1st Qu.:39.50   1st Qu.:15.60  \n Gentoo   :119   Torgersen: 47   Median :44.50   Median :17.30  \n                                 Mean   :43.99   Mean   :17.16  \n                                 3rd Qu.:48.60   3rd Qu.:18.70  \n                                 Max.   :59.60   Max.   :21.50  \n flipper_length_mm  body_mass_g       sex     \n Min.   :172       Min.   :2700   female:165  \n 1st Qu.:190       1st Qu.:3550   male  :168  \n Median :197       Median :4050               \n Mean   :201       Mean   :4207               \n 3rd Qu.:213       3rd Qu.:4775               \n Max.   :231       Max.   :6300               \n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\npenguins %>% select_if(Negate(is.factor)) %>% \n  cor() %>% \n  as.data.frame() %>% \n  rowid_to_column() %>% \n  pivot_longer(- rowid) %>% \n  arrange(desc(abs(value))) %>% \n  filter(value != 1)\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n# A tibble: 12 × 3\n   rowid name               value\n   <int> <chr>              <dbl>\n 1     3 body_mass_g        0.873\n 2     4 flipper_length_mm  0.873\n 3     1 flipper_length_mm  0.653\n 4     3 bill_length_mm     0.653\n 5     1 body_mass_g        0.589\n 6     4 bill_length_mm     0.589\n 7     2 flipper_length_mm -0.578\n 8     3 bill_depth_mm     -0.578\n 9     2 body_mass_g       -0.472\n10     4 bill_depth_mm     -0.472\n11     1 bill_depth_mm     -0.229\n12     2 bill_length_mm    -0.229\n```\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nsite_number <- 1:4\npdf('penguin_data.pdf')\npar(mfrow = c(2, 2))\nfor (i in site_number)\n{\n  penguins %>% \n    filter(site_number == i) %>% \n    ggplot(aes(x= species, y= flipper_length_mm, fill = species, color= species)) +\n    geom_boxplot() +\n    labs(x = 'Species', y = 'Flipper length (mm)', title = paste('Fvuwerfvczefcfzccfgct', i)) +\n    theme(axis.text = element_text(size = 8))\n}\ndev.off()\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nggviolin(penguins, x = species,\n        y = bill_length_mm+bill_depth_mm,\n        fill = species)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(penguins$sex)\ntable(penguins$sex, useNA='ifany')\n```\n:::\n\n## Data preparation\nSet for training and testing data\n\n\n::: {.cell}\n\n```{.r .cell-code}\nset.seed(3223)\ntrain_test_split <- penguins %>% initial_split(prop = .7)\npenguin_train <- training(train_test_split)\npenguin_test <- testing(train_test_split)\nglimpse(penguin_train)\n```\n:::\n\n\nCreate recipe\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsoftmaxkitchen <- recipe(sex ~ ., data = penguin_train) %>%\n step_other(antipodean_island, all_nominal())%>%\nstep_novel(all_nominal())%>%\nstep_other(bill_length_mm, one_of('median-virginica'))%>%\nstep_other(bill_depth_mm, one_of('median-virginica'))\n```\n:::\n\n\n## Visualize recipe steps\n\n\n::: {.cell}\n\n```{.r .cell-code}\nprint(softmaxkitchen)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nprepped_penguin <- prep(softmaxkitchen, new_data = penguin_train)\nprepped_penguin %>% juice() %>% get_condition(pen_length_mm) -> penguin_ped_len\nprepped_penguin %>% juice() %>% get_condition(flipper_length_mm) -> penguin_flipper_len\npenguin_ped_len\npenguin_flipper_len\npenguin_sex\nprepped_penguin %>% bake(new_data = penguin_train) -> penguin_data\npenguin_data %>% juice() -> penguin_data_j\npenguin_data_j\npenguin_pen_len <- penguin_data_j %>\n```\n:::\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}