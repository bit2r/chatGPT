{
  "hash": "0294056d29e638d89ffca97a7b6b0267",
  "result": {
    "markdown": "---\ntitle: \"chatGPT\"\nsubtitle: \"챗GPT 팀구성\"\ndescription: | \n  챗GPT를 데이터 과학 문제 해결에 동원해보자.\nauthor:\n  - name: 이광춘\n    url: https://www.linkedin.com/in/kwangchunlee/\n    affiliation: 한국 R 사용자회\n    affiliation-url: https://github.com/bit2r\ntitle-block-banner: true\n#title-block-banner: \"#562457\"\nformat:\n  html:\n    css: css/quarto.css\n    theme: flatly\n    code-fold: true\n    code-overflow: wrap\n    toc: true\n    toc-depth: 3\n    toc-title: 목차\n    number-sections: true\n    highlight-style: github    \n    self-contained: false\nfilters:\n   - lightbox\nlightbox: auto\nlink-citations: true\nknitr:\n  opts_chunk: \n    message: false\n    warning: false\n    collapse: false\neditor_options: \n  chunk_output_type: console\neditor: \n  markdown: \n    wrap: 72\n---\n\n\n# 데이터셋\n\n챗GPT 교육에 참여한 설문조사 데이터를 정리한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(readxl)\n\nsurvey_26 <- read_excel(\"data/(붙임) 경기도청 챗GPT 직원직무 교육신청 명단(취합).xlsx\", sheet = '4.26.(수)', skip =2) %>% \n  mutate(날짜 = \"2023-04-26\")\nsurvey_27 <- read_excel(\"data/(붙임) 경기도청 챗GPT 직원직무 교육신청 명단(취합).xlsx\", sheet = '4.27.(목)', skip =2) %>% \n  mutate(날짜 = \"2023-04-27\")\nsurvey_28 <- read_excel(\"data/(붙임) 경기도청 챗GPT 직원직무 교육신청 명단(취합).xlsx\", sheet = '4.28.(금)', skip =2) %>% \n  mutate(날짜 = \"2023-04-28\")\n\nsurvey <- bind_rows(survey_26, survey_27) %>% \n  bind_rows(survey_28) %>% \n  janitor::clean_names(ascii = FALSE) %>% \n  set_names(c(\"연번\", \"실국\", \"소속\", \"직위\", \"성명\", \"프롬프트\", \"API\", \"성취목표\", \"날짜\")) %>% \n  mutate(실국 = ifelse(is.na(실국), \"직속\", 실국)) \n```\n:::\n\n\n# 데이터 가명처리\n\n실국, 소속과 직위, 성명이 포함되어 있어 변수 중 성명을 가명처리한다.\n이를 위해서 파이썬 `Faker` 패키지를 사용하여 가명으로 처리한다.\n\n\n::: {.cell}\n\n```{.python .cell-code}\nfrom faker import Faker\nimport pandas as pd\nimport numpy as np\nimport random\nfrom datetime import datetime\n\nfake = Faker('ko_KR')\n\ndef create_rows_faker(num=1):\n    output = [{\"name\"       : fake.name()} for x in range(num)]\n    return output\n\ndf_faker = pd.DataFrame(create_rows_faker(72))\n```\n:::\n\n\n가명처리 데이터를 정리한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(reticulate)\n\nsurvey_tbl <- survey %>% \n  bind_cols(py$df_faker) %>% \n  select(-성명) %>% \n  rename(성명 = name) %>% \n  select(날짜, 실국, 성명, 직위, 프롬프트, API) \n```\n:::\n\n\n# 챗GPT \n\n챗GPT `GPT-4`를 사용해서 챗GPT 실무교육을 통해 얻으려는 것을 요약하도록 프롬프트를 작성한다.\n\n:::{.callout-note collpase=\"true\"}\n### 프롬프트: 챗GPT 교육참여 텍스트를 5개 목표로 군집화시켜 정리하시요\n\n> 챗GPT 응답: <br>\n> 1. 업무 효율성과 생산성 향상: <br>\n>     - 보고서 작성 및 엑셀 스킬 향상 <br>\n>     - 행정 업무의 간소화 <br>\n>     - 특정 직무 역할에서 ChatGPT를 적용하는 다양한 방법 탐구 <br>\n> 1. 변화하는 기술 추세에 적응하고 새로운 기술 습득: <br>\n>     - AI와 ChatGPT의 최신 동향 이해 <br>\n>     - ChatGPT 사용에 뒤처지지 않기 위한 지식 획득 <br>\n>     - 변화하는 기술 풍경에 적응하기 위한 기본 지식 습득 <br>\n> 1. 문제 해결 및 의사 결정 능력 향상: <br>\n>     - 기획 및 이벤트 프로모션을 위한 데이터 시각화 활용 <br>\n>     - 사례 연구 및 문제 해결을 위해 ChatGPT 사용 <br>\n>     - 지역 발전 및 IT 동향에 대한 ChatGPT의 영향 분석 및 이해 <br>\n> 1. ChatGPT 응용 범위 확장: <br>\n>     - 일상 생활 및 다양한 산업 분야(예: 농업 홍보, 콘텐츠 산업)에 ChatGPT 적용 <br>\n>     - 다양한 비즈니스 프로젝트에서 ChatGPT 통합의 잠재력 조사 <br>\n> 1. 의사소통 및 질문 기술 향상: <br>\n>     - 효과적인 프롬프트 질문 방법 학습 <br>\n>     - ChatGPT와 더 나은 상호 작용을 위한 기술 개발 <br>\n>     - 원하는 결과를 얻기 위해 올바른 질문을 하는 것의 중요성 이해 <br>\n\n:::\n\n# 통계 분석\n\n설문조사에 나타난 자기평가 프롬프트 API 활용역량을 표로 요약한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(gt)\nlibrary(gtExtras)\n\nsurvey_gt <- survey %>% \n  count(프롬프트, API) %>% \n  pivot_wider(names_from = API, values_from = n, values_fill = 0) %>% \n  mutate(라 = 0) %>% \n  gt::gt() %>% \n    tab_spanner(\n    label = \"API 활용능력\",\n    columns = c(\n      가,나,다,라\n    )\n  ) %>% \n  gt_theme_nytimes() %>% \n  tab_header(title = \"자기평가 프롬프트, API 활용역량\") %>% \n  cols_align(\n  align = \"center\",\n  columns = everything()\n)\n\nsurvey_gt %>% \n  gtsave_extra(filename=\"images/gg_survey_gt.png\")\n```\n:::\n\n\n![](images/gg_survey_gt.png)\n\n\n요일별 초,중,고급 참여자 역량을 다음과 같이 요약한다.\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsurvey_gt_date <- survey %>% \n  mutate(수준 = case_when(프롬프트 %in% c(\"가\", \"나\") & API %in% c(\"가\", \"나\") ~ \"초급\",\n                          프롬프트 == \"라\" ~ \"고급\",\n                          TRUE ~ \"중급\")) %>% \n  count(날짜, 수준) %>% \n  pivot_wider(names_from = 수준, values_from = n, values_fill  = 0) %>% \n  gt::gt() %>% \n    tab_spanner(\n    label = \"자가평가 역량 종합\",\n    columns = c(\n      초급, 중급, 고급\n    )\n  ) %>% \n  gt_theme_nytimes() %>% \n  tab_header(title = \"챗GPT 요일별 참여자 역량\") %>% \n  cols_align(\n  align = \"center\",\n  columns = everything()\n)  \n\nsurvey_gt_date %>% \n  gtsave_extra(filename=\"images/survey_gt_date.png\")\n```\n:::\n\n\n\n![](images/survey_gt_date.png)\n",
    "supporting": [
      "gg_grouping_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}